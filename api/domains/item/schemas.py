# app/domains/items/schemas.py
# Gemini Assisted Code for Example

from pydantic import BaseModel, Field
from typing import Optional
from datetime import date

# 1. Base schema: Common fields
class ItemBase(BaseModel):
    Title: str
    Author: Optional[str] = None
    ISBN: Optional[str] = None
    Genre: Optional[str] = None
    PublishDate: Optional[date] = None
    CopiesAvailable: int = Field(default=1, ge=0)

# 2. Create schema: Used for POST
class ItemCreate(ItemBase):
    # ItemID is usually auto-generated by the database
    pass

# 3. Read schema: Used for GET
class ItemRead(ItemBase):
    ItemID: int  # DB-generated primary key

    class Config:
        from_attributes = True  # Enables ORM integration (replaces orm_mode in Pydantic v2)

# 4. Update schema: Used for PATCH
class ItemUpdate(BaseModel):
    Title: Optional[str] = None
    Author: Optional[str] = None
    ISBN: Optional[str] = None
    Genre: Optional[str] = None
    PublishDate: Optional[date] = None
    CopiesAvailable: Optional[int] = None